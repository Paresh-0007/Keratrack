"""Initial migration with all tables

Revision ID: 61cf1bfc55cd
Revises: 
Create Date: 2025-09-30 11:54:38.622915

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '61cf1bfc55cd'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('diet_assessments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('activity_level', sa.String(length=20), nullable=True),
    sa.Column('dietary_restrictions', sa.JSON(), nullable=True),
    sa.Column('current_diet_pattern', sa.String(length=50), nullable=True),
    sa.Column('health_conditions', sa.JSON(), nullable=True),
    sa.Column('medications', sa.JSON(), nullable=True),
    sa.Column('assessment_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_diet_assessments_id'), 'diet_assessments', ['id'], unique=False)
    op.create_table('food_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('meal_type', sa.String(length=20), nullable=True),
    sa.Column('foods', sa.JSON(), nullable=True),
    sa.Column('estimated_nutrients', sa.JSON(), nullable=True),
    sa.Column('logged_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_food_logs_id'), 'food_logs', ['id'], unique=False)
    op.create_table('lifestyle_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('stress_level', sa.Integer(), nullable=True),
    sa.Column('sleep_hours', sa.Float(), nullable=True),
    sa.Column('exercise_minutes', sa.Integer(), nullable=True),
    sa.Column('water_intake', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lifestyle_entries_id'), 'lifestyle_entries', ['id'], unique=False)
    op.create_table('predictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('image_path', sa.String(), nullable=False),
    sa.Column('predicted_stage', sa.String(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_predictions_id'), 'predictions', ['id'], unique=False)
    op.create_table('diet_recommendations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('assessment_id', sa.Integer(), nullable=True),
    sa.Column('hair_stage_at_time', sa.String(length=20), nullable=True),
    sa.Column('recommended_nutrients', sa.JSON(), nullable=True),
    sa.Column('meal_plan', sa.JSON(), nullable=True),
    sa.Column('supplements', sa.JSON(), nullable=True),
    sa.Column('foods_to_avoid', sa.JSON(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('reasoning', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['diet_assessments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_diet_recommendations_id'), 'diet_recommendations', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_diet_recommendations_id'), table_name='diet_recommendations')
    op.drop_table('diet_recommendations')
    op.drop_index(op.f('ix_predictions_id'), table_name='predictions')
    op.drop_table('predictions')
    op.drop_index(op.f('ix_lifestyle_entries_id'), table_name='lifestyle_entries')
    op.drop_table('lifestyle_entries')
    op.drop_index(op.f('ix_food_logs_id'), table_name='food_logs')
    op.drop_table('food_logs')
    op.drop_index(op.f('ix_diet_assessments_id'), table_name='diet_assessments')
    op.drop_table('diet_assessments')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
